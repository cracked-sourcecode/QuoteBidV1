import fs from 'fs';
import path from 'path';

const emailTemplateFiles = [
  'server/email-templates/billing-confirmation.html',
  'server/email-templates/subscription-renewal-failed.html'
];

function fixRemainingQueryParams() {
  console.log('üîß Fixing remaining query parameter URLs to use hash-based format...\n');
  
  let totalFixed = 0;
  
  emailTemplateFiles.forEach(filePath => {
    try {
      // Read the file
      const content = fs.readFileSync(filePath, 'utf8');
      
      // Replace billing-related query parameters with hash-based URLs
      const updatedContent = content
        .replace(/\/account\?tab=billing(&[^"]*)?/g, '/account#billing')
        .replace(/https:\/\/quotebid\.co\/account\?tab=billing(&[^"]*)?/g, 'https://quotebid.co/account#billing');
      
      // Only write if there were changes
      if (content !== updatedContent) {
        fs.writeFileSync(filePath, updatedContent, 'utf8');
        console.log(`‚úÖ Fixed: ${path.basename(filePath)}`);
        totalFixed++;
      } else {
        console.log(`‚è≠Ô∏è  No changes needed: ${path.basename(filePath)}`);
      }
      
    } catch (error) {
      console.error(`‚ùå Error processing ${filePath}:`, error.message);
    }
  });
  
  console.log(`\nüìä Summary:`);
  console.log(`‚úÖ Files fixed: ${totalFixed}`);
  console.log(`üìß Total files processed: ${emailTemplateFiles.length}`);
  console.log(`\nüéØ Changes made:`);
  console.log(`  - Changed '/account?tab=billing' ‚Üí '/account#billing'`);
  console.log(`  - Removed UTM parameters and other query strings`);
  console.log(`  - All email links now use consistent hash-based URLs`);
}

fixRemainingQueryParams(); 